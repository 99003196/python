import re


class validation:

    def func1(self):
        lower_case = any(char.islower() for char in self.passcode)
        return lower_case

    def func2(self):
        upper_case = any(char.isupper() for char in self.passcode)
        return upper_case

    def func3(self):
        num = any(char.isdigit() for char in self.passcode)
        return num


class trial(validation):
    # SINGLE INHERITANCE
    def __init__(self):
        print("Enter your password: ")
        self.passcode = input()
        self.var2 = 1

    def check(self):
        lower_case = obj1.func1()
        upper_case = obj1.func2()
        num = self.func3()
        length = len(self.passcode)
        # self.obj1 = self.sym()
        while 1:
            if length < 8:
                print("Your password should have minimum of 8 letters")
                var2 = 0
                break
            elif length > 20:
                print("Exceeded the maximum number of characters")
                var2 = 0
                break
            elif not lower_case:
                print("Should have atleast one lower case letter")
                var2 = 0
                break
            elif not upper_case:
                print("Should have atleast one upper case letter")
                var2 = 0
                break
            elif not num:
                print("should have atleast one number")
                var2 = 0
                break
            elif not re.search('[!@#$&*?]', self.passcode):
                # REGULAR EXPRESSION
                print("Should have atleast one symbol")
                var2 = 0
                break
            else:
                var2 = 1
                print("Valid Password..!!")
        if var2 == 0:
            print("Invalid Password")


obj1 = trial()
obj1.check()
